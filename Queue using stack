Implement a Queue using two stack s1 and s2.

Examples:

Input:
enqueue(2)
enqueue(3)
dequeue()
enqueue(4)
dequeue()
Output: 2 3
Explanation:
enqueue(2) the queue will be [2]
enqueue(3) the queue will be [2, 3]
dequeue() the poped element will be 2 
the queue will be [3]
enqueue(4) the queue will be [3, 4]
dequeue() the poped element will be [3].  

JAVA CODE:


import java.util.*;

class Queue {
    Stack<Integer> input = new Stack<Integer>();
    Stack<Integer> output = new Stack<Integer>();

    // Function to add an element to the queue
    void enqueue(int x) {
        input.push(x);
    }

    // Function to remove front element from queue
    int dequeue() {
        if (output.isEmpty()) {
            // move elements from input to output
            while (!input.isEmpty()) {
                output.push(input.pop());
            }
        }
        if (output.isEmpty()) {
            return -1; // queue is empty
        }
        return output.pop();
    }
}
